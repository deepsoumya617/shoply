services:
  postgres:
    image: postgres:latest
    container_name: shoply_postgres
    restart: always
    environment:
      # feel free to change these values
      POSTGRES_USER: deep
      POSTGRES_PASSWORD: notsosecure
      POSTGRES_DB: ecommerce_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U deep']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: shoply_redis
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    container_name: shoply_api
    command: pnpm run dev:api
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - APP_URL=${APP_URL}
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - '8080:8080'
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env

  worker:
    build: .
    container_name: shoply_worker
    command: pnpm run dev:worker
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - APP_URL=${APP_URL}
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env

volumes:
  postgres_data:
